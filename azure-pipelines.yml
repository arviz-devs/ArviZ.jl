# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- releases/*

variables:
  PYTHON: "Conda" # use Julia's packaged Conda build for installing packages
  CMDSTAN_VERSION: "2.21.0"
  CMDSTAN_DIR: "$(Agent.TempDirectory)/.cmdstan/"
  JULIA_CMDSTAN_HOME: "$(CMDSTAN_DIR)/cmdstan-$(CMDSTAN_VERSION)/" # required by CmdStan.jl
  ARVIZ_VERSION: release

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: Test_Releases # test released versions of ArviZ and Julia
  strategy:
    matrix:
      Julia_1_0:
        JULIA_VERSION: "1.0"
      Julia_1_2:
        JULIA_VERSION: "1.2"
      Julia_1_3:
        JULIA_VERSION: "1.3"
  steps:
  - template: .azure_templates/install_dependencies.yml
    parameters:
      cmdstan_version: $CMDSTAN_VERSION
      cmdstan_dir: $CMDSTAN_DIR
      julia_version: $JULIA_VERSION
      arviz_version: $ARVIZ_VERSION
  - template: .azure_templates/run_tests.yml
- job: Test_Futures # test future versions of ArviZ and Julia
  continueOnError: true # allow_failures
  strategy:
    matrix:
      Julia_1_3_ArviZ_master:
        JULIA_VERSION: "1.3"
        ARVIZ_VERSION: master
      Julia_1_4:
        JULIA_VERSION: "1.4"
      Julia_nightly:
        JULIA_VERSION: "nightly"
  steps:
  - template: .azure_templates/install_dependencies.yml
    parameters:
      cmdstan_version: $CMDSTAN_VERSION
      cmdstan_dir: $CMDSTAN_DIR
      julia_version: $JULIA_VERSION
      arviz_version: $ARVIZ_VERSION
  - template: .azure_templates/run_tests.yml
- job: Documentation # build and deploy documentation if tests passed
  timeoutInMinutes: 0
  variables:
    JULIA_VERSION: "1.3"
    ARVIZ_VERSION: master
  steps:
  - powershell: |
      Write-Host ##vso[task.setvariable variable=ARVIZ_VERSION;isOutput=true]release
    displayName: "Set ArviZ version to release"
    condition: startsWith(variables['build.sourceBranch'], 'refs/tags/')
  - template: .azure_templates/install_dependencies.yml
    parameters:
      cmdstan_version: $CMDSTAN_VERSION
      cmdstan_dir: $CMDSTAN_DIR
      julia_version: $JULIA_VERSION
      arviz_version: $ARVIZ_VERSION
  - bash: |
      set -o xtrace
      export TRAVIS_REPO_SLUG="$BUILD_REPOSITORY_NAME"
      if [[ $BUILD_SOURCEBRANCH == refs/tags/* ]]; then
        export TRAVIS_TAG="${BUILD_SOURCEBRANCH:10}"
        echo "TRAVIS_TAG set to $(TRAVIS_TAG)"
      elif [[ $BUILD_SOURCEBRANCH == refs/heads/* ]]; then
        export TRAVIS_BRANCH="${BUILD_SOURCEBRANCH:11}"
        echo "TRAVIS_BRANCH set to $(TRAVIS_BRANCH)"
      elif [[ $BUILD_SOURCEBRANCH == refs/pull/* ]]; then
        export TRAVIS_PULL_REQUEST="$(cut -d'/' -f3 <<< $BUILD_SOURCEBRANCH)"
        echo "TRAVIS_PULL_REQUEST set to $(TRAVIS_PULL_REQUEST)"
      fi
      export DOCUMENTER_KEY="$(DOCUMENTER_KEY)"
      ./julia -e 'using InteractiveUtils; versioninfo()'
      ./julia --project=docs/ -e 'using Pkg; Pkg.instantiate();
                                             Pkg.develop(PackageSpec(path=pwd()));
                                             Pkg.build()'
      ./julia --color=yes --project=docs/ docs/make.jl
    displayName: 'Build and deploy the docs'
