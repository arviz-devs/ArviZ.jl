name: Documenter
on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:

env:
  CMDSTAN_VERSION: "2.25.0"
  CMDSTAN_PATH: "${{ GITHUB.WORKSPACE }}/.cmdstan/"
  JULIA_NUM_THREADS: 2
  PYTHON: "Conda" # use Julia's packaged Conda build for installing packages

jobs:
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
      - uses: julia-actions/cache@v1
      - name: Download and build CmdStan
        if: steps.cache-cmdstan.outputs.cache-hit != 'true'
        run: |
          wget -P ${{ env.CMDSTAN_PATH }} https://github.com/stan-dev/cmdstan/releases/download/v${{ env.CMDSTAN_VERSION }}/cmdstan-${{ env.CMDSTAN_VERSION }}.tar.gz
          tar -xzpf ${{ env.CMDSTAN_PATH }}/cmdstan-${{ env.CMDSTAN_VERSION }}.tar.gz -C ${{ env.CMDSTAN_PATH }}
          make -C ${{ env.CMDSTAN_PATH }}/cmdstan-${{ env.CMDSTAN_VERSION }}/ build
        shell: bash
      - uses: julia-actions/julia-buildpkg@latest
      - name: Instantiate docs environment
        run: |
          using Pkg
          Pkg.instantiate()
          using ArviZPythonPlots
          using ArviZPythonPlots.Conda
          # https://discourse.julialang.org/t/conda-not-installing-matplotlib-for-pyplot/96813/2
          Conda.add("conda==23.1.0")
          ArviZPythonPlots.initialize_arviz()
          ArviZPythonPlots.initialize_pandas()
        shell: julia --color=yes --project docs {0}
      - uses: julia-actions/julia-docdeploy@v1
        env:
          JULIA_CMDSTAN_HOME: ${{ env.CMDSTAN_PATH }}/cmdstan-${{ env.CMDSTAN_VERSION }}/ # required by CmdStan.jl
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
