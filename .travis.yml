## Documentation: http://docs.travis-ci.com/user/languages/julia/
language: julia
dist: xenial
os:
  - linux
notifications:
  email: false
branches:
  only:
    - master
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/ # build tagged releases
git:
  depth: 99999999
env:
  global:
    - PYTHON=Conda # Install dependencies in Julia's conda env
    - CMDSTAN_VERSION="2.21.0"
    - CMDSTAN_CACHE="$HOME/.cmdstan/"
    - JULIA_CMDSTAN_HOME="$CMDSTAN_CACHE/cmdstan-$CMDSTAN_VERSION/"

cache:
  directories:
  - $CMDSTAN_CACHE

matrix:
  fast_finish: true

jobs:
  allow_failures:
    - julia: 1.3
    - julia: nightly
  include:
    - stage: test
      julia: 1.1
    - stage: test
      julia: 1.2
    - stage: test
      julia: 1.2
      env: ARVIZ_MASTER=true
    - stage: test
      julia: 1.3
    - stage: test
      julia: nightly
    - stage: Documentation
      julia: 1.2
      env: ARVIZ_MASTER=true
      script:
        - julia --color=yes --project=docs/ docs/make.jl
      after_success: skip

before_install:
  - if [ ! -d $JULIA_CMDSTAN_HOME ]; then
    wget -P $CMDSTAN_CACHE https://github.com/stan-dev/cmdstan/releases/download/v$CMDSTAN_VERSION/cmdstan-$CMDSTAN_VERSION.tar.gz;
    tar -xzpf $CMDSTAN_CACHE/cmdstan-$CMDSTAN_VERSION.tar.gz -C $CMDSTAN_CACHE;
    make -C $JULIA_CMDSTAN_HOME build;
    fi
  - if [[ ( "$ARVIZ_MASTER" = true ) && ( ! -n "$TRAVIS_TAG" ) ]]; then
    julia -e 'using Pkg; Pkg.add("PyCall"); using PyCall; run(PyCall.python_cmd(`-m pip install git+https://github.com/pydata/xarray git+https://github.com/arviz-devs/arviz`))';
    fi
after_success:
  - julia --project=test/coverage -e 'using Pkg; Pkg.instantiate()'
  - julia --project=test/coverage test/coverage/coverage.jl
